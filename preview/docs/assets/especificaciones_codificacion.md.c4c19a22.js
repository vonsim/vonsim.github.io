import{_ as e,c as t,o as d,V as o}from"./chunks/framework.99df3b45.js";const p=JSON.parse('{"title":"Codificación","description":"","frontmatter":{},"headers":[],"relativePath":"especificaciones/codificacion.md","lastUpdated":1681770192000}'),c={name:"especificaciones/codificacion.md"},a=o('<h1 id="codificacion" tabindex="-1">Codificación <a class="header-anchor" href="#codificacion" aria-label="Permalink to &quot;Codificación&quot;">​</a></h1><p>Aquí se denota la codificación a binario de todas las instrucciones. <strong>No es la misma que usa el Intel 8088</strong>, más información <a href="/preview/docs/diferencias-con-la-realidad">aquí</a>.</p><h2 id="instrucciones" tabindex="-1">Instrucciones <a class="header-anchor" href="#instrucciones" aria-label="Permalink to &quot;Instrucciones&quot;">​</a></h2><p>Todas las instrucciones tienen un opcode de 8 bits y pueden estar seguidas de <a href="#operandos">operandos</a>. Para mejor organización, se separaron las instrucciones según cómo se codifican.</p><ul><li><a href="#instrucciones-binarias">Instrucciones binarias</a>: <code>MOV</code>, <code>AND</code>, <code>OR</code>, <code>XOR</code>, <code>ADD</code>, <code>ADC</code>, <code>SUB</code>, <code>SBB</code>, <code>CMP</code></li><li><a href="#instrucciones-unarias">Instrucciones unarias</a>: <code>NOT</code>, <code>INC</code>, <code>DEC</code>, <code>NEG</code></li><li><a href="#pila">Pila</a>: <code>PUSH</code>, <code>POP</code>, <code>PUSHF</code>, <code>POPF</code></li><li><a href="#i-o">I/O</a>: <code>IN</code>, <code>OUT</code></li><li><a href="#saltos">Saltos</a>: <code>JMP</code>, <code>CALL</code>, <code>RET</code>, <code>JZ</code>, <code>JNZ</code>, <code>JS</code>, <code>JNS</code>, <code>JC</code>, <code>JNC</code>, <code>JO</code>, <code>JNO</code></li><li><a href="#otras">Otras</a>: <code>INT</code>, <code>IRET</code>, <code>CLI</code>, <code>STI</code>, <code>NOP</code>, <code>HLT</code></li></ul><h3 id="instrucciones-binarias" tabindex="-1">Instrucciones binarias <a class="header-anchor" href="#instrucciones-binarias" aria-label="Permalink to &quot;Instrucciones binarias&quot;">​</a></h3><p>Son instrucciones que requieren dos operandos (<a href="/preview/docs/como-usar/modos-de-direccionamiento#combinaciones-dest-fuente">más info aquí</a>).</p><table><thead><tr><th style="text-align:center;">Instrucción</th><th style="text-align:center;">Opcode</th></tr></thead><tbody><tr><td style="text-align:center;"><code>MOV</code></td><td style="text-align:center;"><code>0000 DDDW</code></td></tr><tr><td style="text-align:center;"><code>AND</code></td><td style="text-align:center;"><code>0001 DDDW</code></td></tr><tr><td style="text-align:center;"><code>OR</code></td><td style="text-align:center;"><code>0010 DDDW</code></td></tr><tr><td style="text-align:center;"><code>XOR</code></td><td style="text-align:center;"><code>0011 DDDW</code></td></tr><tr><td style="text-align:center;"><code>ADD</code></td><td style="text-align:center;"><code>0100 DDDW</code></td></tr><tr><td style="text-align:center;"><code>ADC</code></td><td style="text-align:center;"><code>0101 DDDW</code></td></tr><tr><td style="text-align:center;"><code>SUB</code></td><td style="text-align:center;"><code>0110 DDDW</code></td></tr><tr><td style="text-align:center;"><code>SBB</code></td><td style="text-align:center;"><code>0111 DDDW</code></td></tr><tr><td style="text-align:center;"><code>CMP</code></td><td style="text-align:center;"><code>1000 DDDW</code></td></tr></tbody></table><p><em>DDD</em> indica el modo de direccionamiento. A continuación se detalla qué significa cada valor de <em>DDD</em> y los operandos que requiere.</p><table><thead><tr><th style="text-align:left;">Descripción</th><th style="text-align:center;"><em>DDD</em></th><th style="text-align:left;"><a href="#operandos">Operandos</a></th></tr></thead><tbody><tr><td style="text-align:left;">Registro a registro</td><td style="text-align:center;"><code>000</code></td><td style="text-align:left;"><em>reg</em> dest + <em>reg</em> fuente</td></tr><tr><td style="text-align:left;">Memoria (directo) a registro</td><td style="text-align:center;"><code>001</code></td><td style="text-align:left;"><em>reg</em> dest + <em>mem</em> fuente</td></tr><tr><td style="text-align:left;">Memoria (indirecto) a registro</td><td style="text-align:center;"><code>010</code></td><td style="text-align:left;"><em>reg</em> dest</td></tr><tr><td style="text-align:left;">Inmediato a registro</td><td style="text-align:center;"><code>011</code></td><td style="text-align:left;"><em>reg</em> dest + <em>op.inm</em> fuente</td></tr><tr><td style="text-align:left;">Registro a memoria (directo)</td><td style="text-align:center;"><code>100</code></td><td style="text-align:left;"><em>mem</em> dest + <em>reg</em> fuente</td></tr><tr><td style="text-align:left;">Registro a memoria (indirecto)</td><td style="text-align:center;"><code>101</code></td><td style="text-align:left;"><em>reg</em> fuente</td></tr><tr><td style="text-align:left;">Inmediato a memoria (directo)</td><td style="text-align:center;"><code>110</code></td><td style="text-align:left;"><em>mem</em> dest + <em>op.inm</em> fuente</td></tr><tr><td style="text-align:left;">Inmediato a memoria (indirecto)</td><td style="text-align:center;"><code>111</code></td><td style="text-align:left;"><em>op.inm</em> fuente</td></tr></tbody></table><p><em>W</em> indica si la operación es de tipo byte (<code>W=0</code>) o de tipo word (<code>W=1</code>).</p><h3 id="instrucciones-unarias" tabindex="-1">Instrucciones unarias <a class="header-anchor" href="#instrucciones-unarias" aria-label="Permalink to &quot;Instrucciones unarias&quot;">​</a></h3><p>Son instrucciones que requieren un operando (<a href="/preview/docs/como-usar/modos-de-direccionamiento#combinaciones-dest">más info aquí</a>).</p><table><thead><tr><th style="text-align:center;">Instrucción</th><th style="text-align:center;">Opcode</th></tr></thead><tbody><tr><td style="text-align:center;"><code>NOT</code></td><td style="text-align:center;"><code>101 00 DDW</code></td></tr><tr><td style="text-align:center;"><code>INC</code></td><td style="text-align:center;"><code>101 01 DDW</code></td></tr><tr><td style="text-align:center;"><code>DEC</code></td><td style="text-align:center;"><code>101 10 DDW</code></td></tr><tr><td style="text-align:center;"><code>NEG</code></td><td style="text-align:center;"><code>101 11 DDW</code></td></tr></tbody></table><p><em>DD</em> indica el modo de direccionamiento. A continuación se detalla qué significa cada valor de <em>DD</em> y los operandos que requiere.</p><table><thead><tr><th style="text-align:left;">Descripción</th><th style="text-align:center;"><em>DD</em></th><th style="text-align:left;"><a href="#operandos">Operandos</a></th></tr></thead><tbody><tr><td style="text-align:left;">Registro</td><td style="text-align:center;"><code>00</code></td><td style="text-align:left;"><em>reg</em> dest</td></tr><tr><td style="text-align:left;">Memoria (directo)</td><td style="text-align:center;"><code>01</code></td><td style="text-align:left;"><em>mem</em> dest</td></tr><tr><td style="text-align:left;">Memoria (indirecto)</td><td style="text-align:center;"><code>10</code></td><td style="text-align:left;"></td></tr></tbody></table><p><em>W</em> indica si la operación es de tipo byte (<code>W=0</code>) o de tipo word (<code>W=1</code>).</p><h3 id="pila" tabindex="-1">Pila <a class="header-anchor" href="#pila" aria-label="Permalink to &quot;Pila&quot;">​</a></h3><table><thead><tr><th style="text-align:center;">Instrucción</th><th style="text-align:center;">Opcode</th></tr></thead><tbody><tr><td style="text-align:center;"><code>PUSH</code></td><td style="text-align:center;"><code>1100 0000</code></td></tr><tr><td style="text-align:center;"><code>POP</code></td><td style="text-align:center;"><code>1100 0001</code></td></tr><tr><td style="text-align:center;"><code>PUSHF</code></td><td style="text-align:center;"><code>1100 0010</code></td></tr><tr><td style="text-align:center;"><code>POPF</code></td><td style="text-align:center;"><code>1100 0011</code></td></tr></tbody></table><p>Los primeros dos requieren un registro <em>reg</em> de 16 bit. Los otros dos no reciben operandos.</p><h3 id="i-o" tabindex="-1">I/O <a class="header-anchor" href="#i-o" aria-label="Permalink to &quot;I/O&quot;">​</a></h3><table><thead><tr><th style="text-align:center;">Instrucción</th><th style="text-align:center;">Opcode</th></tr></thead><tbody><tr><td style="text-align:center;"><code>IN</code></td><td style="text-align:center;"><code>1100 10PW</code></td></tr><tr><td style="text-align:center;"><code>OUT</code></td><td style="text-align:center;"><code>1100 11PW</code></td></tr></tbody></table><p><em>P</em> indica si fuente o destino (según si es <code>IN</code> o <code>OUT</code> respectivamente) es variable o fijo:</p><table><thead><tr><th style="text-align:left;">Descripción</th><th style="text-align:center;"><em>P</em></th><th style="text-align:left;"><a href="#operandos">Operandos</a></th></tr></thead><tbody><tr><td style="text-align:left;">Puerto fijo</td><td style="text-align:center;"><code>0</code></td><td style="text-align:left;"><em>op.inm</em> puerto (1 byte)</td></tr><tr><td style="text-align:left;">Puerto variable (alojado en <code>DX</code>)</td><td style="text-align:center;"><code>1</code></td><td style="text-align:left;"></td></tr></tbody></table><p><em>W</em> indica si la operación es de tipo byte (<code>W=0</code>) o de tipo word (<code>W=1</code>).</p><h3 id="saltos" tabindex="-1">Saltos <a class="header-anchor" href="#saltos" aria-label="Permalink to &quot;Saltos&quot;">​</a></h3><p>Aquí se definen todas las operaciones relacionadas con saltar (también llamadas &quot;transferencias de control&quot;).</p><table><thead><tr><th style="text-align:center;">Instrucción</th><th style="text-align:center;">Opcode</th></tr></thead><tbody><tr><td style="text-align:center;"><code>JMP</code></td><td style="text-align:center;"><code>1110 0000</code></td></tr><tr><td style="text-align:center;"><code>CALL</code></td><td style="text-align:center;"><code>1110 0001</code></td></tr><tr><td style="text-align:center;"><code>RET</code></td><td style="text-align:center;"><code>1110 0010</code></td></tr><tr><td style="text-align:center;"><code>JZ</code></td><td style="text-align:center;"><code>1110 1110</code></td></tr><tr><td style="text-align:center;"><code>JNZ</code></td><td style="text-align:center;"><code>1110 1111</code></td></tr><tr><td style="text-align:center;"><code>JS</code></td><td style="text-align:center;"><code>1110 1100</code></td></tr><tr><td style="text-align:center;"><code>JNS</code></td><td style="text-align:center;"><code>1110 1101</code></td></tr><tr><td style="text-align:center;"><code>JC</code></td><td style="text-align:center;"><code>1110 1000</code></td></tr><tr><td style="text-align:center;"><code>JNC</code></td><td style="text-align:center;"><code>1110 1001</code></td></tr><tr><td style="text-align:center;"><code>JO</code></td><td style="text-align:center;"><code>1110 1010</code></td></tr><tr><td style="text-align:center;"><code>JNO</code></td><td style="text-align:center;"><code>1110 1011</code></td></tr></tbody></table><p>Todas estas instrucciones (salvo <code>RET</code>) reciben un operando: la dirección de memoria <a href="#operandos"><em>mem</em></a> a donde se debe saltar.</p><p>A modo de ayuda memoria:</p><ul><li>todos los saltos comienzan con <code>1110</code>;</li><li>los saltos condicionales siguen el formato <code>1110 1FFN</code>, donde <code>FF</code> es la <a href="#flags">flag</a> y <code>N</code> es si es la operación es negada.</li></ul><h3 id="otras" tabindex="-1">Otras <a class="header-anchor" href="#otras" aria-label="Permalink to &quot;Otras&quot;">​</a></h3><table><thead><tr><th style="text-align:center;">Instrucción</th><th style="text-align:center;">Opcode</th></tr></thead><tbody><tr><td style="text-align:center;"><code>INT</code></td><td style="text-align:center;"><code>1111 1010</code></td></tr><tr><td style="text-align:center;"><code>IRET</code></td><td style="text-align:center;"><code>1111 1011</code></td></tr><tr><td style="text-align:center;"><code>CLI</code></td><td style="text-align:center;"><code>1111 1100</code></td></tr><tr><td style="text-align:center;"><code>STI</code></td><td style="text-align:center;"><code>1111 1101</code></td></tr><tr><td style="text-align:center;"><code>NOP</code></td><td style="text-align:center;"><code>1111 1110</code></td></tr><tr><td style="text-align:center;"><code>HLT</code></td><td style="text-align:center;"><code>1111 1111</code></td></tr></tbody></table><p><code>INT</code> necesita, además, el número de interrupción (1 byte, entero sin signo). El resto de instrucciones no reciben operandos.</p><h2 id="operandos" tabindex="-1">Operandos <a class="header-anchor" href="#operandos" aria-label="Permalink to &quot;Operandos&quot;">​</a></h2><p>Los operandos se escriben inmediatamente después de la instrucción según corresponda.</p><p>Las direcciones de memoria (<em>mem</em>) ocupan dos bytes de memoria según en formato little-endian. Por ejemplo, la dirección <code>1234h</code> se escribiría <code>00110100 00010010</code>.</p><p>De manera similar se escriben las operaciones inmediatas (<em>op.inm</em>). Para datos de tipo byte, se ocupa solo un byte (<code>89h</code> → <code>10001001</code>), y para los datos de tipo word se ocupan dos bytes en formato little-endian (<code>1234h</code> → <code>00110100 00010010</code>).</p><p>Los registros (<em>reg</em>) se denotan en binario de la siguiente manera:</p><table><thead><tr><th style="text-align:center;">Nombre</th><th style="text-align:center;">Binario</th></tr></thead><tbody><tr><td style="text-align:center;"><code>AL</code></td><td style="text-align:center;"><code>00000000</code></td></tr><tr><td style="text-align:center;"><code>BL</code></td><td style="text-align:center;"><code>00000001</code></td></tr><tr><td style="text-align:center;"><code>CL</code></td><td style="text-align:center;"><code>00000010</code></td></tr><tr><td style="text-align:center;"><code>DL</code></td><td style="text-align:center;"><code>00000011</code></td></tr><tr><td style="text-align:center;"><code>AH</code></td><td style="text-align:center;"><code>01000000</code></td></tr><tr><td style="text-align:center;"><code>BH</code></td><td style="text-align:center;"><code>01000001</code></td></tr><tr><td style="text-align:center;"><code>CH</code></td><td style="text-align:center;"><code>01000010</code></td></tr><tr><td style="text-align:center;"><code>DH</code></td><td style="text-align:center;"><code>01000011</code></td></tr><tr><td style="text-align:center;"><code>AX</code></td><td style="text-align:center;"><code>10000000</code></td></tr><tr><td style="text-align:center;"><code>BX</code></td><td style="text-align:center;"><code>10000001</code></td></tr><tr><td style="text-align:center;"><code>CX</code></td><td style="text-align:center;"><code>10000010</code></td></tr><tr><td style="text-align:center;"><code>DX</code></td><td style="text-align:center;"><code>10000011</code></td></tr><tr><td style="text-align:center;"><code>IP</code></td><td style="text-align:center;"><code>10100000</code></td></tr><tr><td style="text-align:center;"><code>SP</code></td><td style="text-align:center;"><code>10100001</code></td></tr><tr><td style="text-align:center;"><code>IR</code></td><td style="text-align:center;"><code>10100010</code></td></tr><tr><td style="text-align:center;"><code>MAR</code></td><td style="text-align:center;"><code>10100011</code></td></tr><tr><td style="text-align:center;"><code>MBR</code></td><td style="text-align:center;"><code>10100100</code></td></tr></tbody></table><p>A modo de ayuda memoria:</p><ul><li>si empieza con <code>0</code>, es de tipo byte, y si empieza con <code>1</code>, es de tipo word;</li><li>si empieza con <code>101</code>, es un registro especial;</li><li>si no es un registro especial, los últimos números representan si es <code>A</code>, <code>B</code>, <code>C</code> o <code>D</code>;</li><li>si empieza con <code>00</code>, es la parte low registro general, y si empieza con <code>01</code>, es la parte high.</li></ul><h2 id="flags" tabindex="-1">Flags <a class="header-anchor" href="#flags" aria-label="Permalink to &quot;Flags&quot;">​</a></h2><p>Internamente, las flags de <code>C</code> (carry), <code>O</code> (overflow), <code>S</code> (sign) y <code>Z</code> (zero) se representan como <code>00</code>, <code>01</code>, <code>10</code> y <code>11</code> respectivamente. Eso explica la numeración de los jumps y la razón detrás de que <code>PUSHF</code> apile <code>0000 ZSOC</code>.</p>',44),n=[a];function r(i,l,s,g,y,x){return d(),t("div",null,n)}const h=e(c,[["render",r]]);export{p as __pageData,h as default};
